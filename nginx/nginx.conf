# upstream example-webpack {
#   server 127.0.0.1:8080;
# }

# upstream example-backend {
#   server 127.0.0.1:3000;
# }

# server {
#   listen 80;
#   server_name example.loc;

#   location / {
#     proxy_set_header   Host            $http_host;
#     proxy_set_header   X-Real-IP       $remote_addr;
#     proxy_set_header   X-NginX-Proxy   true;
#     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_http_version 1.1;
#     proxy_redirect     off;
#     proxy_buffering    off;
#     proxy_pass         http://example-webpack;
#   }
# }

# server {
#   listen 80;
#   server_name api.example.loc;

#   location / {
#     proxy_set_header   Host            $http_host;
#     proxy_set_header   Upgrade         $http_upgrade;
#     proxy_set_header   Connection      "upgrade";
#     proxy_set_header   X-Real-IP       $remote_addr;
#     proxy_set_header   X-NginX-Proxy   true;
#     proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_http_version 1.1;
#     proxy_redirect     off;
#     proxy_pass         http://example-backend;
#   }
# }

daemon off;

worker_processes  2;

events {
    worker_connections  1024;
}

http {

  # 有这两行才能保证css文件能在浏览器中正常加载,否则返回的响应头会是test/plain
  include  mime.types;
  default_type  application/octet-stream;

  upstream backend {
    server webapp:8088;
    server webapp-copy:8088;
  }

  upstream casback {
    server cas-server:8089;
  }

  server {
    listen 80;
    server_name localhost;

    listen 443 ssl;
    ssl_certificate     ssl.crt;
    ssl_certificate_key ssl.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers  on;


    location /api/ { # BackEnd
      # rewrite ^/api/(?P<path>.*)$ /$path break;
      proxy_set_header   Host            $http_host;
      # proxy_set_header   Host            $proxy_host;
      proxy_set_header   Upgrade         $http_upgrade;
      proxy_set_header   Connection      "upgrade";
      proxy_set_header   X-Real-IP       $remote_addr;
      proxy_set_header   X-NginX-Proxy   true;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header   X-Forwarded-For $remote_addr;
      proxy_http_version 1.1;
      proxy_redirect     off;
      proxy_redirect     http://backend/api/ https://$host:$server_port/api/;
      proxy_pass         http://backend/api/;
    }


    location /login/ { # BackEnd
      # rewrite ^/api/(?P<path>.*)$ /$path break;
      proxy_set_header   Host            $http_host;
      # proxy_set_header   Host            $proxy_host;
      proxy_set_header   Upgrade         $http_upgrade;
      proxy_set_header   Connection      "upgrade";
      proxy_set_header   X-Real-IP       $remote_addr;
      proxy_set_header   X-NginX-Proxy   true;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header   X-Forwarded-For $remote_addr;
      proxy_http_version 1.1;
      proxy_redirect     off;
      proxy_redirect     http://backend/login/ http://$host:$server_port/login/;
      proxy_pass         http://backend/login/;
    }

    location /cas/ { # BackEnd
      # rewrite ^/api/(?P<path>.*)$ /$path break;
      proxy_set_header   Host            $http_host;
      # proxy_set_header   Host            $proxy_host;
      proxy_set_header   Upgrade         $http_upgrade;
      proxy_set_header   Connection      "upgrade";
      proxy_set_header   X-Real-IP       $remote_addr;
      proxy_set_header   X-NginX-Proxy   true;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      # proxy_set_header   X-Forwarded-For $remote_addr;
      proxy_http_version 1.1;
      proxy_redirect     off;
      proxy_redirect     http://casback/cas/ https://$host:$server_port/cas/;
      proxy_pass         http://casback/cas/;
    }

    location / { # FrontEnd
      root        /app/;
      index       login.html;
      # try_files   $uri $uri/ /index.html;
    }

    location /admin {
      proxy_pass         http://dblooker:8080;
    }
  }

  
}