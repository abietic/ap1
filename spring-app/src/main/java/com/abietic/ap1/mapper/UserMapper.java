package com.abietic.ap1.mapper;

import com.abietic.ap1.model.User;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface UserMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Delete({
        "delete from user_info",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Insert({
        "insert into user_info (id, name, ",
        "gender, age, telphone, ",
        "register_mode, third_party_id)",
        "values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, ",
        "#{gender,jdbcType=TINYINT}, #{age,jdbcType=INTEGER}, #{telphone,jdbcType=VARCHAR}, ",
        "#{registerMode,jdbcType=VARCHAR}, #{thirdPartyId,jdbcType=VARCHAR})"
    })
    int insert(User row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    // 下面的Option注解是手动添加的，表示要使用插入后生成的键的值，会设置到参数对象的相应属性中
    @Options(useGeneratedKeys = true,keyColumn = "id", keyProperty = "id")
    @InsertProvider(type=UserSqlProvider.class, method="insertSelective")
    int insertSelective(User row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Select({
        "select",
        "id, name, gender, age, telphone, register_mode, third_party_id",
        "from user_info",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.TINYINT),
        @Result(column="age", property="age", jdbcType=JdbcType.INTEGER),
        @Result(column="telphone", property="telphone", jdbcType=JdbcType.VARCHAR),
        @Result(column="register_mode", property="registerMode", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_party_id", property="thirdPartyId", jdbcType=JdbcType.VARCHAR)
    })
    User selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @UpdateProvider(type=UserSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(User row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_info
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Update({
        "update user_info",
        "set name = #{name,jdbcType=VARCHAR},",
          "gender = #{gender,jdbcType=TINYINT},",
          "age = #{age,jdbcType=INTEGER},",
          "telphone = #{telphone,jdbcType=VARCHAR},",
          "register_mode = #{registerMode,jdbcType=VARCHAR},",
          "third_party_id = #{thirdPartyId,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(User row);

    // 这些是手写的，暂时不知道如何自动生成
    @Select({
        "select",
        "id, name, gender, age, telphone, register_mode, third_party_id",
        "from user_info",
        "where telphone = #{telphone,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="name", property="name", jdbcType=JdbcType.VARCHAR),
        @Result(column="gender", property="gender", jdbcType=JdbcType.TINYINT),
        @Result(column="age", property="age", jdbcType=JdbcType.INTEGER),
        @Result(column="telphone", property="telphone", jdbcType=JdbcType.VARCHAR),
        @Result(column="register_mode", property="registerMode", jdbcType=JdbcType.VARCHAR),
        @Result(column="third_party_id", property="thirdPartyId", jdbcType=JdbcType.VARCHAR)
    })
    User selectByTelphone(String telphone);
}