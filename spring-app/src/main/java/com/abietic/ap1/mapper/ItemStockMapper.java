package com.abietic.ap1.mapper;

import com.abietic.ap1.model.ItemStock;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface ItemStockMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_stock
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Delete({
        "delete from item_stock",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_stock
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    // 下面的Option注解是手动添加的，表示要使用插入后生成的键的值，会设置到参数对象的相应属性中
    @Options(useGeneratedKeys = true,keyColumn = "id", keyProperty = "id")
    @Insert({
        "insert into item_stock (id, stock, ",
        "item_id)",
        "values (#{id,jdbcType=INTEGER}, #{stock,jdbcType=INTEGER}, ",
        "#{itemId,jdbcType=INTEGER})"
    })
    int insert(ItemStock row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_stock
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    // 下面的Option注解是手动添加的，表示要使用插入后生成的键的值，会设置到参数对象的相应属性中
    @Options(useGeneratedKeys = true,keyColumn = "id", keyProperty = "id")
    @InsertProvider(type=ItemStockSqlProvider.class, method="insertSelective")
    int insertSelective(ItemStock row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_stock
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Select({
        "select",
        "id, stock, item_id",
        "from item_stock",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="stock", property="stock", jdbcType=JdbcType.INTEGER),
        @Result(column="item_id", property="itemId", jdbcType=JdbcType.INTEGER)
    })
    ItemStock selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_stock
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @UpdateProvider(type=ItemStockSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(ItemStock row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item_stock
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Update({
        "update item_stock",
        "set stock = #{stock,jdbcType=INTEGER},",
          "item_id = #{itemId,jdbcType=INTEGER}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ItemStock row);

    // 这些是手写的，暂时不知道如何自动生成
    @Update({
        "update item_stock",
        " set stock = stock - #{amount}",
        "where item_id = #{itemId} and stock >= #{amount}"
    })
    int decreaseStock(Integer itemId, Integer amount);

    @Select({
        "select",
        "id, stock, item_id",
        "from item_stock",
        "where item_id = #{itemId,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="stock", property="stock", jdbcType=JdbcType.INTEGER),
        @Result(column="item_id", property="itemId", jdbcType=JdbcType.INTEGER)
    })
    ItemStock selectByItemId(Integer itemId);
}