package com.abietic.ap1.mapper;

import com.abietic.ap1.model.Item;

import java.util.List;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

@Mapper
public interface ItemMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Delete({
        "delete from item",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    // 下面的Option注解是手动添加的，表示要使用插入后生成的键的值，会设置到参数对象的相应属性中
    @Options(useGeneratedKeys = true,keyColumn = "id", keyProperty = "id")
    @Insert({
        "insert into item (id, title, ",
        "price, description, ",
        "sales, img_url)",
        "values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, ",
        "#{price,jdbcType=DOUBLE}, #{description,jdbcType=VARCHAR}, ",
        "#{sales,jdbcType=INTEGER}, #{imgUrl,jdbcType=VARCHAR})"
    })
    int insert(Item row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    // 下面的Option注解是手动添加的，表示要使用插入后生成的键的值，会设置到参数对象的相应属性中
    @Options(useGeneratedKeys = true,keyColumn = "id", keyProperty = "id")
    @InsertProvider(type=ItemSqlProvider.class, method="insertSelective")
    int insertSelective(Item row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Select({
        "select",
        "id, title, price, description, sales, img_url",
        "from item",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="sales", property="sales", jdbcType=JdbcType.INTEGER),
        @Result(column="img_url", property="imgUrl", jdbcType=JdbcType.VARCHAR)
    })
    Item selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @UpdateProvider(type=ItemSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(Item row);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table item
     *
     * @mbg.generated Fri Jul 15 15:39:34 UTC 2022
     */
    @Update({
        "update item",
        "set title = #{title,jdbcType=VARCHAR},",
          "price = #{price,jdbcType=DOUBLE},",
          "description = #{description,jdbcType=VARCHAR},",
          "sales = #{sales,jdbcType=INTEGER},",
          "img_url = #{imgUrl,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(Item row);

    // 这些是手写的，暂时不知道如何自动生成

    @Update({
        "update item",
        "set sales = sales + #{amount}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    void increaseSales(Integer id, Integer amount);

    @Select({
        "select",
        "id, title, price, description, sales, img_url",
        "from item",
        "order by sales DESC"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="title", property="title", jdbcType=JdbcType.VARCHAR),
        @Result(column="price", property="price", jdbcType=JdbcType.DOUBLE),
        @Result(column="description", property="description", jdbcType=JdbcType.VARCHAR),
        @Result(column="sales", property="sales", jdbcType=JdbcType.INTEGER),
        @Result(column="img_url", property="imgUrl", jdbcType=JdbcType.VARCHAR)
    })
    List<Item> listItem();
}