# Use root/example as user/password credentials
version: '3.1'

networks:
  front-tier:
    # driver: overlay
    attachable: true
  back-tier:
    # driver: overlay
    attachable: true

services:
  server-and-proxy:
    image: nginx:1.16
    volumes:
      - "./nginx:/etc/nginx:ro" # :ro stands for read-only
      - "./pages:/app"
    ports:
      - 80:80
      - 443:443
    depends_on:
      # - spring-app
      - adminer
    networks:
      - front-tier
    command: [nginx]
    # command: [nginx-debug, '-g', 'daemon off;']

  db:
    image: mysql:5.7
    # 这个命令保证了数据库使用最长4bytes的UTF-8
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    # ports:
      # - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      # - MYSQL_ALLOW_EMPTY_PASSWORD=true
      # - MYSQL_USER=admin
      # - MYSQL_PASSWORD=admin
      - MYSQL_DATABASE=ap1
    volumes:
      # 这一条是初始化要使用的数据库和表用的
      # - "./db_test_entry:/docker-entrypoint-initdb.d"
      # 这条是生成的数据库文件存放的位置
      - "./db_data_dir:/var/lib/mysql"
      # 这个是设置数据库的配置文件，这时只设置了使用最长4bytes的UTF-8
      - "./db_config:/etc/mysql/conf.d"
    networks:
      back-tier:
        aliases:
          - database

  spring-app:
    # image: maven:3-openjdk-8
    image: maven:3-jdk-11
    working_dir: /app
    volumes:
      - "./:/app"
      - "~/.m2:/root/.m2"
    depends_on:
      - db
      - session-redis
      - rocketmq-broker
      - cache-redis 
    networks:
      front-tier:
        aliases:
          - webapp
      back-tier:
    command: ["./mvnw", "spring-boot:run"]
    # command: ["./mvnw", "spring-boot:run", "-Dreactor.netty.http.server.accessLogEnabled=true"]
    # command: ["./mvnw", "mybatis-generator:generate"]

  session-redis:
    image: redis:5
    # ports:
    #   - "6379:6379"
    volumes:
      - "./redis/session-data:/data"
      - "./redis/session-conf/redis.conf:/etc/redis/redis.conf"
    # depends_on:
    #   - db
    networks:
      back-tier:
        aliases:
          - session-redis
    command: [ "redis-server", "/etc/redis/redis.conf" ]

  cache-redis:
    image: redis:5
    # ports:
    #   - "6379:6379"
    volumes:
      - "./redis/cache-data:/data"
      - "./redis/cache-conf/redis.conf:/etc/redis/redis.conf"
    # depends_on:
    #   - db
    networks:
      back-tier:
        aliases:
          - cache-redis
    command: [ "redis-server", "/etc/redis/redis.conf" ]

  token-redis:
    image: redis:5
    # ports:
    #   - "6379:6379"
    volumes:
      - "./redis/token-data:/data"
      - "./redis/token-conf/redis.conf:/etc/redis/redis.conf"
    # depends_on:
    #   - db
    networks:
      back-tier:
        aliases:
          - token-redis
    command: [ "redis-server", "/etc/redis/redis.conf" ]

  rocketmq-namesrv:
    image: rocketmqinc/rocketmq
    # ports:
    #   - "9876:9876"
    volumes:
      - "./rocketmq/logs:/home/rocketmq/logs"
      - "./rocketmq/store:/home/rocketmq/store"
    networks:
      back-tier:
        aliases:
          - rocketmq-namesrv
    command: ["sh", "mqnamesrv"]



  rocketmq-broker:
    image: rocketmqinc/rocketmq
    # ports:
    #   - "10909:10909"
    #   - "10911:10911"
    #   - "10912:10912"
    volumes:
      - "./rocketmq/logs:/home/rocketmq/logs"
      - "./rocketmq/store:/home/rocketmq/store"
      - "./rocketmq/broker-conf/broker.conf:/opt/rocketmq-4.4.0/conf/broker.conf"
    networks:
      back-tier:
        aliases:
          - rocketmq-broker
    command: ["sh", "mqbroker", "-n", "rocketmq-namesrv:9876", "-c", "../conf/broker.conf"]
    depends_on:
      - rocketmq-namesrv


  rocketmq-console-ng:
    image: styletang/rocketmq-console-ng
    ports:
      - 8087:8080
    depends_on:
      - rocketmq-namesrv
    networks:
      back-tier:
        aliases:
          - rocketmq-console-ng
    environment:
      - JAVA_OPTS= -Dlogging.level.root=info   -Drocketmq.namesrv.addr=rocketmq-namesrv:9876 
      - Dcom.rocketmq.sendMessageWithVIPChannel=false
    
  
  adminer:
    image: adminer
    depends_on:
      - db
    networks:
      front-tier:
        aliases:
          - dblooker
      back-tier: